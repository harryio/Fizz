// Code generated by moshi-kotlin-codegen. Do not edit.
package com.harryio.fizz.network.response

import com.squareup.moshi.JsonAdapter
import com.squareup.moshi.JsonReader
import com.squareup.moshi.JsonWriter
import com.squareup.moshi.Moshi
import com.squareup.moshi.internal.Util
import java.lang.NullPointerException
import kotlin.String
import kotlin.Suppress
import kotlin.collections.emptySet
import kotlin.text.buildString

@Suppress("DEPRECATION", "unused", "ClassName", "REDUNDANT_PROJECTION")
class AuthenticationTokenResponseJsonAdapter(
  moshi: Moshi
) : JsonAdapter<AuthenticationTokenResponse>() {
  private val options: JsonReader.Options = JsonReader.Options.of("request_token")

  private val stringAdapter: JsonAdapter<String> = moshi.adapter(String::class.java, emptySet(),
      "requestToken")

  override fun toString(): String = buildString(49) {
      append("GeneratedJsonAdapter(").append("AuthenticationTokenResponse").append(')') }

  override fun fromJson(reader: JsonReader): AuthenticationTokenResponse {
    var requestToken: String? = null
    reader.beginObject()
    while (reader.hasNext()) {
      when (reader.selectName(options)) {
        0 -> requestToken = stringAdapter.fromJson(reader) ?:
            throw Util.unexpectedNull("requestToken", "request_token", reader)
        -1 -> {
          // Unknown name, skip it.
          reader.skipName()
          reader.skipValue()
        }
      }
    }
    reader.endObject()
    return AuthenticationTokenResponse(
        requestToken = requestToken ?: throw Util.missingProperty("requestToken", "request_token",
            reader)
    )
  }

  override fun toJson(writer: JsonWriter, value: AuthenticationTokenResponse?) {
    if (value == null) {
      throw NullPointerException("value was null! Wrap in .nullSafe() to write nullable values.")
    }
    writer.beginObject()
    writer.name("request_token")
    stringAdapter.toJson(writer, value.requestToken)
    writer.endObject()
  }
}
